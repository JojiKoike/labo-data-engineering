{
  "name": "Data Engineering Labo Container",
  "dockerComposeFile": ["../compose.yml"],
  "service": "python-app",
  "shutdownAction": "none",
  "workspaceFolder": "/workspace",
  "customizations": {
    "vscode": {
      "extensions": [
        "charliermarsh.ruff",
        "codezombiech.gitignore",
        "eamodio.gitlens",
        "kevinrose.vsc-python-indent",
        "mosapride.zenkaku",
        "ms-azuretools.vscode-docker",
        "ms-python.python",
        "njpwerner.autodocstring",
        "oderwat.indent-rainbow",
        "pkief.material-icon-theme",
        "shardulm94.trailing-spaces",
        "usernamehw.errorlens",
        "yzhang.markdown-all-in-one",
        "seatonjiang.gitmoji-vscode",
        "matangover.mypy",
        "streetsidesoftware.code-spell-checker",
        "donjayamanne.githistory",
        "tamasfe.even-better-toml",
        "ms-toolsai.jupyter",
        "mechatroner.rainbow-csv",
        "zainchen.json",
        "mads-hartmann.bash-ide-vscode",
        "rogalmic.bash-debug",
        "shakram02.bash-beautify",
        "mtxr.sqltools",
        "inferrinizzard.prettier-sql-vscode",
        "ms-toolsai.datawrangler",
        "mtxr.sqltools-driver-pg",
        "mtxr.sqltools-driver-mysql",
        "evidence.sqltools-bigquery-driver",
        "regadas.sqltools-trino-driver"
      ],
      "settings": {
        //"python.defaultInterpreterPath": "${workspaceFolder}/python-src/.venv/bin/python",
        "python.venvFolders": ["**/.venv"],
        "[python]": {
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "explicit",
            "source.organizeImports.ruff": "explicit"
          },
          "editor.formatOnSave": true
        },
        "mypy-type-checker.importStrategy": "fromEnvironment",
        "mypy-type-checker.args": ["--config-file \"/workspace/mypy.ini\""],
        "python.analysis.typeCheckingMode": "basic",
        "python.analysis.autoSearchPaths": false,
        "python.analysis.extraPaths": ["**/src/"],
        "[sql]": {
          "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode",
          "editor.formatOnSave": true
        },
        "Prettier-SQL.commaPosition": "after", // Where to place commas for SELECT and GROUP BY clauses
        "Prettier-SQL.denseOperators": false, // Whether to strip whitespace around operators such as + or >=
        "Prettier-SQL.ignoreTabSettings": false, // Whether to ignore VSCode user/workspace settings for tabSize and insertSpaces
        "Prettier-SQL.expressionWidth": 50, // Number of characters allowed in each line before breaking
        "Prettier-SQL.indentStyle": "standard", // Switched between standard keyword positioning vs maintaining a central space column
        "Prettier-SQL.insertSpacesOverride": true, // Overrides insertSpaces if Prettier-SQL.ignoreTabSettings is enabled
        "Prettier-SQL.keywordCase": "preserve", // Whether to print keywords in ALL CAPS or lowercase
        "Prettier-SQL.linesBetweenQueries": 1, // How many newlines to place between each query / statement
        "Prettier-SQL.logicalOperatorNewline": "before", // Whether to break before or after AND and OR
        "Prettier-SQL.newlineBeforeSemicolon": false, // Whether to place semicolon on its own line or on previous line
        "Prettier-SQL.SQLFlavourOverride": "sql", // Uses custom SQL Flavour to format sql files. Use this if you are using the Microsoft PostgreSQL or MSSQL Extensions since they do not provide a new language ID for VSCode.
        "Prettier-SQL.tabSizeOverride": 2, // Overrides tabSize if Prettier-SQL.ignoreTabSettings is enabled
        "Prettier-SQL.tabulateAlias": false, // Whether to right-align aliases to the longest line in the SELECT clause
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        }
      }
    }
  }
}
