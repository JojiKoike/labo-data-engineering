services:
  python-app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    volumes:
      # Mount the root folder that contains .git
      - .:/workspace:cached
    command: sleep infinity

  spark-cluster-master:
    build:
      context: .
      dockerfile: infra/spark/Dockerfile
    container_name: spark-cluster-master
    hostname: spark-cluster-master
    user: '0'
    tty: true
    ports:
      - 4041:4040
      - 8081:8080
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: 'bash -c "/opt/spark/sbin/start-master.sh && /bin/bash"'

  spark-cluster-worker1:
    build:
      context: .
      dockerfile: infra/spark/Dockerfile
    container_name: spark-cluster-workder1
    hostname: spark-cluster-workder1
    user: '0'
    tty: true
    ports:
      - 8082:8081
    depends_on:
      - spark-cluster-master
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: 'bash -c "/opt/spark/sbin/start-worker.sh spark://spark-cluster-master:7077 -c 1 -m 2g  && /bin/bash"'

  spark-cluster-worker2:
    build:
      context: .
      dockerfile: infra/spark/Dockerfile
    container_name: spark-cluster-workder2
    hostname: spark-cluster-workder2
    user: '0'
    tty: true
    ports:
      - 8083:8081
    depends_on:
      - spark-cluster-master
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: 'bash -c "/opt/spark/sbin/start-worker.sh spark://spark-cluster-master:7077 -c 1 -m 2g  && /bin/bash"'

  spark-cluster-worker3:
    build:
      context: .
      dockerfile: infra/spark/Dockerfile
    container_name: spark-cluster-workder3
    hostname: spark-cluster-workder3
    user: '0'
    tty: true
    ports:
      - 8084:8081
    depends_on:
      - spark-cluster-master
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    command: 'bash -c "/opt/spark/sbin/start-worker.sh spark://spark-cluster-master:7077 -c 1 -m 2g  && /bin/bash"'

  postgres:
    build:
      context: .
      dockerfile: infra/postgres/Dockerfile
    ports:
      - 5432:5432
    volumes:
      - pgdb-store:/var/lib/postgresql/data
    tty: true
    environment:
      POSTGRES_PASSWORD: 'postgres'

  minio:
    build:
      context: .
      dockerfile: infra/minio/Dockerfile
    command: ['server', '/data', '--console-address', ':9090']
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - minio-store:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password

  bigquery-emulator:
    build:
      context: .
      dockerfile: infra/bigquery/Dockerfile
    platform: 'linux/x86_64'
    ports:
      - '9050:9050'
    volumes:
      - ./bigquery:/bigquery
    command: 'bigquery-emulator --project=test'

volumes:
  pgdb-store:
  minio-store:
